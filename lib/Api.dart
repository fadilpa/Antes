
import 'package:mentegoz_technologies/compledted_model.dart';
import 'package:http/http.dart' as http;
import 'package:mentegoz_technologies/pendin_model.dart';
import 'package:shared_preferences/shared_preferences.dart';
Future<List<Autogenerated>> fetchAlbum( ) async {
  final prefs = await SharedPreferences.getInstance();
// ignore: unused_local_variable
String ?Firebase_Id=prefs.getString('Firebase_Id');
print(Firebase_Id);
    // final firebaseIdProvider =
    //     Provider.of<FirebaseIdProvider>(context, listen: false);
    final response = await http.post(
      Uri.parse('https://antes.meduco.in/api/get_services'),
      body: {
        'firebase.id':Firebase_Id,
      },
    );


    if (response.statusCode == 200) {
      // If the server did return a 200 OK response,
      // then parse the JSON.
      // return Datum.fromJson(jsonDecode(response.body));

      var data = GeneratedFromJson(response.body);
      return data;
    } else {
      // If the server did not return a 200 OK response,
      // then throw an exception.
      throw Exception('Failed to load album');
    }
  }

  Future<List<CompletedServicesModel>> fetchCompletedAlbum( ) async {
  final prefs = await SharedPreferences.getInstance();
// ignore: unused_local_variable
String ?Firebase_Id=prefs.getString('Firebase_Id');

String ?MobileNum=prefs.getString('Name');
String ?Clientname=prefs.getString('Mobile');
// print(Firebase_Id);
    // final firebaseIdProvider =
    //     Provider.of<FirebaseIdProvider>(context, listen: false);
    final response = await http.post(
      Uri.parse('https://antes.meduco.in/api/get_services_completed'),
      body: {
        'firebase.id':Firebase_Id,
      },
    );


    if (response.statusCode == 200) {
      // If the server did return a 200 OK response,
      // then parse the JSON.
      // return Datum.fromJson(jsonDecode(response.body));

      var data = CompletedServicesfromjson(response.body);
      return data;
    } else {
      // If the server did not return a 200 OK response,
      // then throw an exception.
      throw Exception('Failed to load album');
    }
  }