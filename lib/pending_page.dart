import 'dart:async';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:mentegoz_technologies/api.dart';
import 'package:mentegoz_technologies/pendin_model.dart';
import 'package:mentegoz_technologies/pending_service_page.dart';
import 'package:mentegoz_technologies/providerclass.dart';
import 'package:mentegoz_technologies/util/styles.dart';
import 'package:provider/provider.dart';

class PendingPage extends StatefulWidget {
  const PendingPage({super.key});

  @override
  State<PendingPage> createState() => _PendingPageState();
}

class _PendingPageState extends State<PendingPage> {
  late Future<List<Autogenerated>> futureDataList;
  
  @override
  void initState() {
    super.initState();
    final firebaseIdProvider =
        Provider.of<FirebaseIdProvider>(context, listen: false);
    futureDataList = fetchAlbum();
  }

  @override
  Widget build(BuildContext context) {
    final screenHeight = MediaQuery.of(context).size.height;
    final screenWidth = MediaQuery.of(context).size.width;
    return Scaffold(
      body: FutureBuilder<List<Autogenerated>>(
        
        future: fetchAlbum(),
        
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Center(child: CircularProgressIndicator());
          } else if (snapshot.hasData) {
            // print(snapshot.data!);
            final dataList = snapshot.data![0].data;
            // print(dataList!.length);
            if (dataList!.isEmpty) {
              return Text('No Data');
            }
            if (dataList == null) {
              return Text('No Data');
            }

            return Padding(
              padding: const EdgeInsets.only(left: 10, right: 10),
              child: GestureDetector(
                child: GridView.builder(
                  shrinkWrap: true,
                  gridDelegate:
                      const SliverGridDelegateWithFixedCrossAxisCount(
                          crossAxisCount: 2,
                          mainAxisSpacing: 10,
                          crossAxisSpacing: 5),
                  itemCount: dataList.length,
                  itemBuilder: (context, index) {
                    var servicename = dataList[index].serviceName;
                    var clientName = dataList[index].clientName!;
                    var refNo = dataList[index].refNo!;
                    var category = dataList[index].category!;
                    var startDate = dataList[index].startDate!;
                    var endDate = dataList[index].endDate!;
                    var priority = dataList[index].priority!;
                    var endtime = dataList[index].endTime!;
                    var startTime = dataList[index].startTime!;
                    var address = dataList[index].address!;
                    var email = dataList[index].email!;
                     var phone = dataList[index].phone!;
                    var landmark = dataList[index].landmark!;

                    return GestureDetector(
                        onTap: () {
                          // Navigate to the other page when an item is tapped.
                          Navigator.of(context).push(
                            MaterialPageRoute(
                              builder: (context) => PendingServicePage(
                                index: index, 
                                clientName: clientName,
                                servicename: servicename,
                                refNo: refNo,
                                category: category,
                                enddate: endDate,
                                startdate: startDate,
                                endtime: endtime,
                                starttime: startTime,
                                Address: address,
                                Email: email,
                                Phone: phone,
                                Landmark: landmark,
                              ),
                              // Replace with the actual page you want to navigate to.
                            ),
                          );
                        },
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.center,
                          children: [
                            SizedBox(
                              height: screenHeight/70,
                            ),
                            Text('Service ${index + 1}'.toUpperCase(),style: TextStyle(fontWeight: FontWeight.bold),),
                             SizedBox(
                              height: screenHeight/70,
                            ),
                            Container(
                              height: 200,
                              width: screenWidth / 2.5,
                              decoration: BoxDecoration(
                                color:  Color.fromRGBO( 60, 180, 229,1),
                                borderRadius: BorderRadius.circular(5),
                              ),
                              child: Padding(
                                padding: const EdgeInsets.only(left: 10),
                                child: Column(
                                  mainAxisAlignment:
                                      MainAxisAlignment.spaceEvenly,
                                  crossAxisAlignment:
                                      CrossAxisAlignment.start,
                                  children: [
                                    Padding(
                                      padding: const EdgeInsets.only(right:.0),
                                      child: Text(
                                        clientName,
                                        style: mainTextStyle,
                                      ),
                                    ),
                                    Text(
                                      startDate,
                                      style: mainTextStyle,
                                    ),
                                    Text(
                                      priority,
                                      style: mainTextStyle,
                                    ),
                                  ],
                                ),
                              ),
                            ),
                          ],
                        ));
                  },
                ),
              ),
            );
          } else if (snapshot.hasError) {
            return Text('Error: ${snapshot.error}');
          } else {
            return Text('No Data');
          }
        },
      ),
    );
  }
}
